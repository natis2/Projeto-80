{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"theme\", \"linking\", \"fallback\", \"documentTitle\", \"onReady\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport { BaseNavigationContainer } from '@react-navigation/core';\nimport ThemeProvider from \"./theming/ThemeProvider\";\nimport DefaultTheme from \"./theming/DefaultTheme\";\nimport LinkingContext from \"./LinkingContext\";\nimport useThenable from \"./useThenable\";\nimport useLinking from \"./useLinking\";\nimport useDocumentTitle from \"./useDocumentTitle\";\nimport useBackButton from \"./useBackButton\";\nvar NavigationContainer = React.forwardRef(function NavigationContainer(_ref, ref) {\n  var _ref$theme = _ref.theme,\n      theme = _ref$theme === void 0 ? DefaultTheme : _ref$theme,\n      linking = _ref.linking,\n      _ref$fallback = _ref.fallback,\n      fallback = _ref$fallback === void 0 ? null : _ref$fallback,\n      documentTitle = _ref.documentTitle,\n      onReady = _ref.onReady,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var isLinkingEnabled = linking ? linking.enabled !== false : false;\n  var refContainer = React.useRef(null);\n  useBackButton(refContainer);\n  useDocumentTitle(refContainer, documentTitle);\n\n  var _useLinking = useLinking(refContainer, _objectSpread({\n    enabled: isLinkingEnabled,\n    prefixes: []\n  }, linking)),\n      getInitialState = _useLinking.getInitialState;\n\n  var _useThenable = useThenable(getInitialState),\n      _useThenable2 = _slicedToArray(_useThenable, 2),\n      isResolved = _useThenable2[0],\n      initialState = _useThenable2[1];\n\n  React.useImperativeHandle(ref, function () {\n    return refContainer.current;\n  });\n  var linkingContext = React.useMemo(function () {\n    return {\n      options: linking\n    };\n  }, [linking]);\n  var isReady = rest.initialState != null || !isLinkingEnabled || isResolved;\n  var onReadyRef = React.useRef(onReady);\n  React.useEffect(function () {\n    onReadyRef.current = onReady;\n  });\n  React.useEffect(function () {\n    if (isReady) {\n      var _onReadyRef$current;\n\n      (_onReadyRef$current = onReadyRef.current) === null || _onReadyRef$current === void 0 ? void 0 : _onReadyRef$current.call(onReadyRef);\n    }\n  }, [isReady]);\n\n  if (!isReady) {\n    return fallback;\n  }\n\n  return React.createElement(LinkingContext.Provider, {\n    value: linkingContext\n  }, React.createElement(ThemeProvider, {\n    value: theme\n  }, React.createElement(BaseNavigationContainer, _extends({}, rest, {\n    initialState: rest.initialState == null ? initialState : rest.initialState,\n    ref: refContainer\n  }))));\n});\nexport default NavigationContainer;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SACEC,uBADF,QAIO,wBAJP;AAKA,OAAOC,aAAP;AACA,OAAOC,YAAP;AACA,OAAOC,cAAP;AACA,OAAOC,WAAP;AACA,OAAOC,UAAP;AACA,OAAOC,gBAAP;AACA,OAAOC,aAAP;AAyBA,IAAMC,mBAAmB,GAAGT,KAAK,CAACU,UAANV,CAAiB,SAASS,mBAAT,OAS3CE,GAT2C,EAU3C;EAAA,sBAREC,KAQF;EAAA,IAREA,KAQF,2BARUT,YAQV;EAAA,IAPEU,OAOF,QAPEA,OAOF;EAAA,yBANEC,QAMF;EAAA,IANEA,QAMF,8BANa,IAMb;EAAA,IALEC,aAKF,QALEA,aAKF;EAAA,IAJEC,OAIF,QAJEA,OAIF;EAAA,IAHKC,IAGL;;EACA,IAAMC,gBAAgB,GAAGL,OAAO,GAAGA,OAAO,CAACM,OAARN,KAAoB,KAAvB,GAA+B,KAA/D;EAEA,IAAMO,YAAY,GAAGpB,KAAK,CAACqB,MAANrB,CAAqC,IAArCA,CAArB;EAEAQ,aAAa,CAACY,YAAD,CAAbZ;EACAD,gBAAgB,CAACa,YAAD,EAAeL,aAAf,CAAhBR;;EAEA,kBAA4BD,UAAU,CAACc,YAAD;IACpCD,OAAO,EAAED,gBAD2B;IAEpCI,QAAQ,EAAE;EAF0B,GAGjCT,OAHiC,EAAtC;EAAA,IAAQU,eAAR,eAAQA,eAAR;;EAMA,mBAAmClB,WAAW,CAACkB,eAAD,CAA9C;EAAA;EAAA,IAAOC,UAAP;EAAA,IAAmBC,YAAnB;;EAEAzB,KAAK,CAAC0B,mBAAN1B,CAA0BW,GAA1BX,EAA+B;IAAA,OAAMoB,YAAY,CAACO,OAAnB;EAAA,CAA/B3B;EAEA,IAAM4B,cAAc,GAAG5B,KAAK,CAAC6B,OAAN7B,CAAc;IAAA,OAAO;MAAE8B,OAAO,EAAEjB;IAAX,CAAP;EAAA,CAAdb,EAA4C,CAACa,OAAD,CAA5Cb,CAAvB;EAEA,IAAM+B,OAAO,GAAGd,IAAI,CAACQ,YAALR,IAAqB,IAArBA,IAA6B,CAACC,gBAA9BD,IAAkDO,UAAlE;EAEA,IAAMQ,UAAU,GAAGhC,KAAK,CAACqB,MAANrB,CAAagB,OAAbhB,CAAnB;EAEAA,KAAK,CAACiC,SAANjC,CAAgB,YAAM;IACpBgC,UAAU,CAACL,OAAXK,GAAqBhB,OAArBgB;EADF;EAIAhC,KAAK,CAACiC,SAANjC,CAAgB,YAAM;IACpB,IAAI+B,OAAJ,EAAa;MAAA;;MACX,iCAAU,CAACJ,OAAX;IACD;EAHH,GAIG,CAACI,OAAD,CAJH/B;;EAMA,IAAI,CAAC+B,OAAL,EAAc;IAGZ,OAAOjB,QAAP;EACD;;EAED,OACEd,oBAACI,cAAD,CAAgB8B,QAAhB;IAAyBC,KAAK,EAAEP;EAAhC,GACE5B,oBAACE,aAAD;IAAeiC,KAAK,EAAEvB;EAAtB,GACEZ,oBAACC,uBAAD,eACMgB,IADN;IAEEQ,YAAY,EACVR,IAAI,CAACQ,YAALR,IAAqB,IAArBA,GAA4BQ,YAA5BR,GAA2CA,IAAI,CAACQ,YAHpD;IAKEd,GAAG,EAAES;EALP,GADF,CADF,CADF;AAlD0B,EAA5B;AAiEA,eAAeX,mBAAf","names":["React","BaseNavigationContainer","ThemeProvider","DefaultTheme","LinkingContext","useThenable","useLinking","useDocumentTitle","useBackButton","NavigationContainer","forwardRef","ref","theme","linking","fallback","documentTitle","onReady","rest","isLinkingEnabled","enabled","refContainer","useRef","prefixes","getInitialState","isResolved","initialState","useImperativeHandle","current","linkingContext","useMemo","options","isReady","onReadyRef","useEffect","Provider","value"],"sources":["NavigationContainer.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  BaseNavigationContainer,\n  NavigationContainerProps,\n  NavigationContainerRef,\n} from '@react-navigation/core';\nimport ThemeProvider from './theming/ThemeProvider';\nimport DefaultTheme from './theming/DefaultTheme';\nimport LinkingContext from './LinkingContext';\nimport useThenable from './useThenable';\nimport useLinking from './useLinking';\nimport useDocumentTitle from './useDocumentTitle';\nimport useBackButton from './useBackButton';\nimport type { Theme, LinkingOptions, DocumentTitleOptions } from './types';\n\ntype Props = NavigationContainerProps & {\n  theme?: Theme;\n  linking?: LinkingOptions;\n  fallback?: React.ReactNode;\n  documentTitle?: DocumentTitleOptions;\n  onReady?: () => void;\n};\n\n/**\n * Container component which holds the navigation state designed for React Native apps.\n * This should be rendered at the root wrapping the whole app.\n *\n * @param props.initialState Initial state object for the navigation tree. When deep link handling is enabled, this will override deep links when specified. Make sure that you don't specify an `initialState` when there's a deep link (`Linking.getInitialURL()`).\n * @param props.onReady Callback which is called after the navigation tree mounts.\n * @param props.onStateChange Callback which is called with the latest navigation state when it changes.\n * @param props.theme Theme object for the navigators.\n * @param props.linking Options for deep linking. Deep link handling is enabled when this prop is provided, unless `linking.enabled` is `false`.\n * @param props.fallback Fallback component to render until we have finished getting initial state when linking is enabled. Defaults to `null`.\n * @param props.documentTitle Options to configure the document title on Web. Updating document title is handled by default unless `documentTitle.enabled` is `false`.\n * @param props.children Child elements to render the content.\n * @param props.ref Ref object which refers to the navigation object containing helper methods.\n */\nconst NavigationContainer = React.forwardRef(function NavigationContainer(\n  {\n    theme = DefaultTheme,\n    linking,\n    fallback = null,\n    documentTitle,\n    onReady,\n    ...rest\n  }: Props,\n  ref?: React.Ref<NavigationContainerRef | null>\n) {\n  const isLinkingEnabled = linking ? linking.enabled !== false : false;\n\n  const refContainer = React.useRef<NavigationContainerRef>(null);\n\n  useBackButton(refContainer);\n  useDocumentTitle(refContainer, documentTitle);\n\n  const { getInitialState } = useLinking(refContainer, {\n    enabled: isLinkingEnabled,\n    prefixes: [],\n    ...linking,\n  });\n\n  const [isResolved, initialState] = useThenable(getInitialState);\n\n  React.useImperativeHandle(ref, () => refContainer.current);\n\n  const linkingContext = React.useMemo(() => ({ options: linking }), [linking]);\n\n  const isReady = rest.initialState != null || !isLinkingEnabled || isResolved;\n\n  const onReadyRef = React.useRef(onReady);\n\n  React.useEffect(() => {\n    onReadyRef.current = onReady;\n  });\n\n  React.useEffect(() => {\n    if (isReady) {\n      onReadyRef.current?.();\n    }\n  }, [isReady]);\n\n  if (!isReady) {\n    // This is temporary until we have Suspense for data-fetching\n    // Then the fallback will be handled by a parent `Suspense` component\n    return fallback as React.ReactElement;\n  }\n\n  return (\n    <LinkingContext.Provider value={linkingContext}>\n      <ThemeProvider value={theme}>\n        <BaseNavigationContainer\n          {...rest}\n          initialState={\n            rest.initialState == null ? initialState : rest.initialState\n          }\n          ref={refContainer}\n        />\n      </ThemeProvider>\n    </LinkingContext.Provider>\n  );\n});\n\nexport default NavigationContainer;\n"]},"metadata":{},"sourceType":"module"}